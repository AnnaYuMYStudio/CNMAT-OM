; OM File Header - Saved 2016/06/10 16:49:00
; (6.1001 :patc (om-make-point 949 283) (om-make-point 376 23) (om-make-point 785 719) "" 183 0 nil "2016/06/10 16:48:47")
; End File Header
(in-package :om)(load-lib-for (quote ("CNMAT-OM")))(setf *om-current-persistent* (om-load-patch1 "3b-substitutions with r-interleave" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 250 114) (quote "R-interleave is a function that interleaves a parent and a child polyrhythmic frame.$$The inputs must be polyrhythmic frames of the same number of voices.$") nil (om-make-point 464 103) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "PRF" (quote cnmat::prf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "voices" nil))) (om-make-point 462 370) (om-make-point 256 205) (if (find-class (quote cnmat::prf) nil) (make-instance (quote cnmat::prf) :voices (list (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 2 3 4 6) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 2 3 4 4 2) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 3 4 6 2) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 3 4 4 2 2) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 4 6 2 3) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 4 4 2 2 3) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 6 2 3 4) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 4 2 2 3 4) :from-file t))) :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "R-INTERLEAVE" (quote cnmat::r-interleave) (quote ((om-load-inputfun (quote input-funbox) "RHYTHM-PARENT" "RHYTHM-PARENT" nil) (om-load-inputfun (quote input-funbox) "RHYTHM-CHILD" "RHYTHM-CHILD" nil))) (om-make-point 513 297) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "PRF" (quote cnmat::prf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "voices" nil))) (om-make-point 154 497) (om-make-point 190 156) (if (find-class (quote cnmat::prf) nil) (make-instance (quote cnmat::prf) :voices (list (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 2 3 4 4 2) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 3 4 4 2 2) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 4 4 2 2 3) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 4 2 2 3 4) :from-file t))) :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 299 363) (om-make-point 48 30) (list 4 2) "(4 2)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 260 364) (om-make-point 27 30) 6 "6" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "R-SUBSTITUTE" (quote cnmat::r-substitute) (quote ((om-load-inputfun (quote input-funbox) "RHYTHM" "RHYTHM" nil) (om-load-inputfun (quote input-funbox) "VAL" "VAL" nil) (om-load-inputfun (quote input-funbox) "SUBS" "SUBS" (list 4 2)))) (om-make-point 172 433) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "PRF" (quote cnmat::prf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "voices" nil))) (om-make-point 174 180) (om-make-point 190 156) (if (find-class (quote cnmat::prf) nil) (make-instance (quote cnmat::prf) :voices (list (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 2 3 4 6) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 3 4 6 2) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 4 6 2 3) :from-file t)) (if (find-class (quote cnmat::rhythmic-frame) nil) (make-instance (quote cnmat::rhythmic-frame) :pulses (list 6 2 3 4) :from-file t))) :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 149 44) (om-make-point 70 30) (list 2 3 4 6) "(2 3 4 6)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GET-ROTATIONS" (quote cnmat:get-rotations) (quote ((om-load-inputfun (quote input-funbox) "a list of values" "DURATIONS" (list 1 2 3)))) (om-make-point 142 86) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 1 0 nil 0) (7 0 2 0 nil 0) (3 0 2 1 nil 0) (6 0 3 0 nil 0) (7 0 6 0 nil 0) (5 0 6 1 nil 0) (4 0 6 2 nil 0) (9 0 7 1 nil 0) (8 0 9 0 nil 0))) nil 6.1001))
